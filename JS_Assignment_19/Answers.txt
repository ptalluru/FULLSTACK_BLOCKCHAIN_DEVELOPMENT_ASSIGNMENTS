NOTE :- QUESTION 9 NOT AVAILABLE IN ASSIGNMENT SHEET

1)
        function job() {
        return new Promise(function (resolve, reject) {
            reject();
        });
        }
        let promise = job();
        promise
        .then(function () {
            console.log("Success 1");
        })
        .then(function () {
            console.log("Success 2");
        })
        .then(function () {
            console.log("Success 3");
        })
        .catch(function () {
            console.log("Error 1");
        })
        .then(function () {
            console.log("Success 4");
        });

What is the output of the code above ?

Answer:-
  Error 1
  Success 4




3)
        const promise = new Promise((res) => res(2));
        promise
        .then((v) => {
            console.log(v);
            return v * 2;
        })
        .then((v) => {
            console.log(v);
            return v * 2;
        })
        .finally((v) => {
            console.log(v);
            return v * 2;
        })
        .then((v) => {
            console.log(v);
        });

Answer:-
    2
    4
    undefined
    8




4)
        console.log("start");
        const fn = () =>
        new Promise((resolve, reject) => {
            console.log(1);
            resolve("success");
        });
        console.log("middle");
        fn().then((res) => {
        console.log(res);
        });
        console.log("end");

What is the output of this code snippet?

Answer:-
    start
    middle
    1
    end
    success



6)
        Promise.resolve("Success!")
        .then((data) => {
            return data.toUpperCase();
        })
        .then((data) => {
            console.log(data);
        });

What will the output be?

Answer:-
    SUCCESS!



7)
        var p = new Promise((resolve, reject) => {
        reject(Error("The Fails!"));
        })
        .catch((error) => console.log(error))
        .then((error) => console.log(error));

What will the output be?

Answer:-
    //Catch block prints error details from rejected promise
    Error: The Fails!
    
    //for then
    undefined



8)
        console.log("start");
        setTimeout(() => {
        console.log("setTimeout");
        });
        Promise.resolve().then(() => {
        console.log("resolve");
        });
        console.log("end");

What will the output be?

Answer:-
    start
    end
    resolve
    setTimeout



10)
        console.log("start");
        Promise.resolve(1).then((res) => {
        console.log(res);
        });
        Promise.resolve(2).then((res) => {
        console.log(res);
        });
        console.log("end");

What will the output be?

Answer:-
    start
    end
    1
    2

